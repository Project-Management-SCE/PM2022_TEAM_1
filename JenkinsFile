pipeline {
    agent none
    stages {

        stage('Build') {
            agent {
                docker {
                    image 'python:3.7'
                }
            }
            steps {
		            withEnv(["HOME=${env.WORKSPACE}"]) {
		               sh 'pip install -r requirements.txt'
					}
			}
        }
        stage(' Unit Tests') {
            agent {
                docker {
                    image 'python:3.7'
                }
            }
            steps {
		            withEnv(["HOME=${env.WORKSPACE}"]) {
                sh 'python manage.py test --tag=unit-test'
		      }
			}
        }
        stage(' integration-test') {
            agent {
                docker {
                    image 'python:3.7'
                }
            }
            steps {
		            withEnv(["HOME=${env.WORKSPACE}"]) {
                sh 'python manage.py test --tag=integration-test'
		      }
			}
        }
        stage(' unit test coverage') {
        agent {
                docker {
                    image 'python:3.7'
                }
            }
			steps {

					withEnv(["HOME=${env.WORKSPACE}"]) {

						sh "python -m coverage run --source 'track' manage.py test"
						sh "python -m coverage report --fail-under=50"

					}


			}
		}
		        stage(' bug and quality checker') {
        agent {
                docker {
                    image 'python:3.7'
                }
            }
			steps {

					withEnv(["HOME=${env.WORKSPACE}"]) {

						sh "python -m pylint --ignore=track"
					}

			}
		}
	}
}
